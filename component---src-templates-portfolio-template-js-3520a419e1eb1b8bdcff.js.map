{"version":3,"sources":["webpack://franklin/./src/components/BlogItem.js","webpack://franklin/./src/components/Button.js","webpack://franklin/./src/styles/PortfolioStyles.js","webpack://franklin/./src/templates/portfolio-template.js"],"names":["BlogItemStyles","styled","index","nodeObj","excerpt","frontmatter","title","date","path","featuredImageAlt","featuredImage","image","getImage","key","Link","to","className","G","loading","alt","ButtonWrapper","props","type","text","PagerStyles","edges","data","allMarkdownRemark","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","Banner","content","map","node","BlogItem","rel","Button","Array","from","length","_","i"],"mappings":"0IAMMA,E,KAAiBC,sBAAH,gEAAGA,CAAH,sgCAuIpB,IAjDiB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAEvBC,EAEED,EAFFC,QAFqC,EAInCD,EADFE,YAAeC,EAHsB,EAGtBA,MAAOC,EAHe,EAGfA,KAAMC,EAHS,EAGTA,KAAMC,EAHG,EAGHA,iBAAkBC,EAHf,EAGeA,cAEhDC,GAAQC,OAASF,GAEvB,OACE,gBAACV,EAAD,CAAgBa,IAAG,aAAeX,GAC/BS,GACC,8BACE,gBAAC,EAAAG,KAAD,CAAMC,GAAIP,GACR,wBAAMQ,UAAU,WAAWV,GAC3B,gBAAC,EAAAW,EAAD,CAAaC,QAAQ,OAAOP,MAAOA,EAAOQ,IAAKV,MAKpDH,GACC,0BACE,gBAAC,EAAAQ,KAAD,CAAMC,GAAIP,GAAOF,IAIpBF,GACC,2BACE,yBAAIA,GACHI,GACC,uBAAKQ,UAAU,QACb,gBAAC,EAAAF,KAAD,CAAME,UAAU,WAAWD,GAAIP,GAA/B,aAGA,0BAAKD,Q,gDCzHba,E,KAAgBnB,qBAAH,6DAAGA,CAAH,ybA8CnB,IARe,SAAAoB,GACb,OACE,gBAACD,EAAD,CAAeE,KAAMD,EAAMC,MACxBD,EAAME,KAAOF,EAAME,KAAO,eAAgB,O,qIC1CpCC,E,KAAcvB,oBAAH,uEAAGA,CAAH,qd,UCgExB,EA1D0B,SAACoB,GAAW,IAC5BI,EAAUJ,EAAMK,KAAKC,kBAArBF,MAD2B,EAGDJ,EAAMO,YAAhCC,EAH2B,EAG3BA,YAAaC,EAHc,EAGdA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,IAAMA,EAAc,GAAGK,WAC1DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,gCACE,gBAAC,IAAD,CAAK5B,MAAM,6CACX,gBAAC8B,EAAA,EAAD,CAAQC,QAAQ,uBAChB,yBACG,IADH,4IAKA,8LAKCZ,EAAMa,KAAI,WAAWpC,GAAW,IAAnBqC,EAAkB,EAAlBA,KACZ,OAAO,gBAACC,EAAA,EAAD,CAAUrC,QAASoC,EAAMrC,MAAOA,OAIxC4B,EAAW,GACV,gBAACN,EAAD,KACE,uBAAKR,UAAU,SACXe,GACA,gBAAC,EAAAjB,KAAD,CAAMC,GAAE,cAAgBkB,EAAYQ,IAAI,QACtC,gBAACC,EAAA,EAAD,CAAQnB,KAAK,eAGfS,GACA,gBAAC,EAAAlB,KAAD,CAAMC,GAAE,cAAgBoB,EAAYM,IAAI,QACtC,gBAACC,EAAA,EAAD,CAAQnB,KAAK,WAInB,uBAAKP,UAAU,WACZ2B,MAAMC,KAAK,CAAEC,OAAQf,IAAY,SAACgB,EAAGC,GAAJ,OAChC,gBAAC,EAAAjC,KAAD,CACED,IAAG,sBAAuBkC,EAAI,GAC9BhC,GAAE,eAAsB,IAANgC,EAAU,GAAKA,EAAI,IAEpCA,EAAI","file":"component---src-templates-portfolio-template-js-3520a419e1eb1b8bdcff.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst BlogItemStyles = styled.article`\n  margin: calc(var(--spacing) * 4) 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto auto auto;\n  grid-gap: var(--spacing);\n\n  @media (min-width: 768px) {\n    margin: calc(var(--spacing) * 6) 0;\n    grid-template-rows: auto auto;\n    grid-gap: calc(var(--spacing) * 2);\n  }\n\n  @media (min-width: 1200px) {\n    margin: calc(var(--spacing) * 8) 0;\n    grid-gap: calc(var(--spacing) * 3);\n  }\n\n  > figure {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    overflow: hidden;\n    background-color: #000;\n    margin: 0;\n    opacity: 1;\n\n    img {\n      transition: transform var(--transSlow) ease, opacity var(--transSlow) ease !important;\n      opacity: 1;\n    }\n  }\n\n  &:hover {\n    > figure {\n      img {\n        transform: scale(1.1);\n        opacity: 0.5 !important;\n      }\n    }\n  }\n\n  h2 {\n    grid-column: 1 / 3;\n    grid-row: 2 / 3;\n    font-size: var(--h3);\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  @media (min-width: 768px) {\n    h2 {\n      grid-column: 1 / 2;\n    }\n  }\n\n  > div {\n    grid-column: 1 / 3;\n    grid-row: 3 / 4;\n    p {\n      margin-top: 0;\n    }\n    @media (min-width: 768px) {\n      grid-column: 2 / 3;\n      grid-row: 2 / 3;\n\n      p {\n        margin-bottom: calc(var(--spacing) * 2);\n      }\n    }\n  }\n\n  .meta {\n    display: flex;\n    justify-content: space-between;\n\n    h4 {\n      margin: 0;\n      font-size: var(--h5);\n      color: var(--primaryColor);\n    }\n  }\n`\n\nconst BlogItem = ({ index, nodeObj }) => {\n  const {\n    excerpt,\n    frontmatter: { title, date, path, featuredImageAlt, featuredImage },\n  } = nodeObj\n  const image = getImage(featuredImage)\n\n  return (\n    <BlogItemStyles key={`blog-item-${index}`}>\n      {image && (\n        <figure>\n          <Link to={path}>\n            <span className=\"sr-only\">{title}</span>\n            <GatsbyImage loading=\"lazy\" image={image} alt={featuredImageAlt} />\n          </Link>\n        </figure>\n      )}\n\n      {title && (\n        <h2>\n          <Link to={path}>{title}</Link>\n        </h2>\n      )}\n\n      {excerpt && (\n        <div>\n          <p>{excerpt}</p>\n          {path && (\n            <div className=\"meta\">\n              <Link className=\"btn-link\" to={path}>\n                Link here\n              </Link>\n              <h4>{date}</h4>\n            </div>\n          )}\n        </div>\n      )}\n    </BlogItemStyles>\n  )\n}\n\nBlogItem.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  excerpt: PropTypes.string,\n  path: PropTypes.string,\n  date: PropTypes.string,\n}\n\nexport default BlogItem\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst ButtonWrapper = styled.button`\n  border: none;\n  background-color: transparent;\n  font-size: var(--h5);\n  padding: 0;\n  display: flex;\n  font-family: var(--serif);\n  color: var(--charcoal);\n  text-decoration: none;\n  position: relative;\n\n  &:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    height: 0.1rem;\n    width: 100%;\n    background-color: var(--charcoal);\n    left: 0;\n    bottom: -0.25rem;\n    opacity: 1;\n    transition: opacity var(--transSlow);\n  }\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n\n    &:after {\n      opacity: 0.15;\n    }\n  }\n\n  &:visited {\n    text-decoration: none;\n  }\n`\n\nconst Button = props => {\n  return (\n    <ButtonWrapper type={props.type}>\n      {props.text ? props.text : \"Read Article\"}{\" \"}\n    </ButtonWrapper>\n  )\n}\n\nexport default Button\n","import styled from \"styled-components\"\n\nexport const PagerStyles = styled.aside`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto auto;\n  grid-gap: var(--spacing);\n  font-family: var(--serif);\n  font-size: var(--h5);\n\n  @media (min-width: 768px) {\n    grid-gap: calc(var(--spacing) * 2);\n  }\n\n  @media (min-width: 1200px) {\n    grid-gap: calc(var(--spacing) * 3);\n  }\n\n  a {\n    color: var(--black);\n    text-decoration: none;\n  }\n\n  .btns {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .numbers {\n    grid-column: 1 / 3;\n    grid-row: 2 / 3;\n\n    a {\n      padding-right: var(--spacing);\n    }\n  }\n`\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Seo from \"../components/SEO\"\nimport BlogItem from \"../components/BlogItem\"\nimport Button from \"../components/Button\"\nimport { PagerStyles } from \"../styles/PortfolioStyles\"\nimport Banner from \"../components/Banner\"\n\nconst PortfolioTemplate = (props) => {\n  const { edges } = props.data.allMarkdownRemark\n\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? \"\" : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n\n  return (\n    <>\n      <Seo title=\"Read more about the projects at Franklin\" />\n      <Banner content=\"Franklin Portfolio\" />\n      <p>\n        {\" \"}\n        This is the Franklin journal. Here you will find an elegant blog\n        system that will help you make announcements to your cleints with ease.\n      </p>\n      <p>\n        Each page displays a maximum of 10 posts before displaying the\n        pagination component. To change the maximum number of posts per page,\n        please visit gatsby-node.js.\n      </p>\n      {edges.map(({ node }, index) => {\n        return <BlogItem nodeObj={node} index={index} />\n      })}\n      {/* Paging controls\n        If there are multiple pages, show pager */}\n      {numPages > 1 && (\n        <PagerStyles>\n          <div className=\"btns\">\n            {!isFirst && (\n              <Link to={`/portfolio/${prevPage}`} rel=\"prev\">\n                <Button text=\"Previous\" />\n              </Link>\n            )}\n            {!isLast && (\n              <Link to={`/portfolio/${nextPage}`} rel=\"next\">\n                <Button text=\"Next\" />\n              </Link>\n            )}\n          </div>\n          <div className=\"numbers\">\n            {Array.from({ length: numPages }, (_, i) => (\n              <Link\n                key={`pagination-numbers${i + 1}`}\n                to={`/portfolio/${i === 0 ? \"\" : i + 1}`}\n              >\n                {i + 1}\n              </Link>\n            ))}\n          </div>\n        </PagerStyles>\n      )}\n    </>\n  )\n}\n\nexport default PortfolioTemplate\n\nexport const portfolioQuery = graphql`\n  query portfolioQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YY\")\n            path\n            tags\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}