{"version":3,"sources":["webpack://franklin/./src/components/BlogItem.js","webpack://franklin/./src/pages/index.js"],"names":["BlogItemStyles","styled","index","nodeObj","excerpt","frontmatter","title","date","path","featuredImageAlt","featuredImage","image","getImage","key","Link","to","className","G","loading","alt","FeaturedItems","BlogPostQuery","data","content","totalCount","edges","map","node"],"mappings":"2IAMMA,E,KAAiBC,sBAAH,gEAAGA,CAAH,sgCAuIpB,IAjDiB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAEvBC,EAEED,EAFFC,QAFqC,EAInCD,EADFE,YAAeC,EAHsB,EAGtBA,MAAOC,EAHe,EAGfA,KAAMC,EAHS,EAGTA,KAAMC,EAHG,EAGHA,iBAAkBC,EAHf,EAGeA,cAEhDC,GAAQC,OAASF,GAEvB,OACE,gBAACV,EAAD,CAAgBa,IAAG,aAAeX,GAC/BS,GACC,8BACE,gBAAC,EAAAG,KAAD,CAAMC,GAAIP,GACR,wBAAMQ,UAAU,WAAWV,GAC3B,gBAAC,EAAAW,EAAD,CAAaC,QAAQ,OAAOP,MAAOA,EAAOQ,IAAKV,MAKpDH,GACC,0BACE,gBAAC,EAAAQ,KAAD,CAAMC,GAAIP,GAAOF,IAIpBF,GACC,2BACE,yBAAIA,GACHI,GACC,uBAAKQ,UAAU,QACb,gBAAC,EAAAF,KAAD,CAAME,UAAU,WAAWD,GAAIP,GAA/B,aAGA,0BAAKD,Q,4FCrHba,EAAgBnB,mBAAH,4DAAGA,CAAH,oDAsBnB,UAjBiB,SAAC,GAAc,IACtBoB,EADqB,EAAXC,KACVD,cAER,OACE,gCACE,gBAAC,IAAD,MACA,gBAAC,IAAD,CACEE,QAAQ,mDAEV,gBAACH,EAAD,KAAgBC,EAAcG,WAA9B,mBACCH,EAAcI,MAAMC,KAAI,WAAWxB,GAAX,IAAGyB,EAAH,EAAGA,KAAH,OACvB,gBAAC,IAAD,CAAUxB,QAASwB,EAAMzB,MAAOA","file":"component---src-pages-index-js-1711c32fba9acc5cc9a8.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst BlogItemStyles = styled.article`\n  margin: calc(var(--spacing) * 4) 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto auto auto;\n  grid-gap: var(--spacing);\n\n  @media (min-width: 768px) {\n    margin: calc(var(--spacing) * 6) 0;\n    grid-template-rows: auto auto;\n    grid-gap: calc(var(--spacing) * 2);\n  }\n\n  @media (min-width: 1200px) {\n    margin: calc(var(--spacing) * 8) 0;\n    grid-gap: calc(var(--spacing) * 3);\n  }\n\n  > figure {\n    grid-column: 1 / 3;\n    grid-row: 1 / 2;\n    overflow: hidden;\n    background-color: #000;\n    margin: 0;\n    opacity: 1;\n\n    img {\n      transition: transform var(--transSlow) ease, opacity var(--transSlow) ease !important;\n      opacity: 1;\n    }\n  }\n\n  &:hover {\n    > figure {\n      img {\n        transform: scale(1.1);\n        opacity: 0.5 !important;\n      }\n    }\n  }\n\n  h2 {\n    grid-column: 1 / 3;\n    grid-row: 2 / 3;\n    font-size: var(--h3);\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  @media (min-width: 768px) {\n    h2 {\n      grid-column: 1 / 2;\n    }\n  }\n\n  > div {\n    grid-column: 1 / 3;\n    grid-row: 3 / 4;\n    p {\n      margin-top: 0;\n    }\n    @media (min-width: 768px) {\n      grid-column: 2 / 3;\n      grid-row: 2 / 3;\n\n      p {\n        margin-bottom: calc(var(--spacing) * 2);\n      }\n    }\n  }\n\n  .meta {\n    display: flex;\n    justify-content: space-between;\n\n    h4 {\n      margin: 0;\n      font-size: var(--h5);\n      color: var(--primaryColor);\n    }\n  }\n`\n\nconst BlogItem = ({ index, nodeObj }) => {\n  const {\n    excerpt,\n    frontmatter: { title, date, path, featuredImageAlt, featuredImage },\n  } = nodeObj\n  const image = getImage(featuredImage)\n\n  return (\n    <BlogItemStyles key={`blog-item-${index}`}>\n      {image && (\n        <figure>\n          <Link to={path}>\n            <span className=\"sr-only\">{title}</span>\n            <GatsbyImage loading=\"lazy\" image={image} alt={featuredImageAlt} />\n          </Link>\n        </figure>\n      )}\n\n      {title && (\n        <h2>\n          <Link to={path}>{title}</Link>\n        </h2>\n      )}\n\n      {excerpt && (\n        <div>\n          <p>{excerpt}</p>\n          {path && (\n            <div className=\"meta\">\n              <Link className=\"btn-link\" to={path}>\n                Link here\n              </Link>\n              <h4>{date}</h4>\n            </div>\n          )}\n        </div>\n      )}\n    </BlogItemStyles>\n  )\n}\n\nBlogItem.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  excerpt: PropTypes.string,\n  path: PropTypes.string,\n  date: PropTypes.string,\n}\n\nexport default BlogItem\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Seo from \"../components/SEO\"\nimport BlogItem from \"../components/BlogItem\"\nimport styled from \"styled-components\"\nimport Banner from \"../components/Banner\"\n\nconst FeaturedItems = styled.h4`\n  font-size: var(--h5);\n  color: var(--primaryColor);\n`\n\nconst HomePage = ({ data }) => {\n  const { BlogPostQuery } = data\n\n  return (\n    <>\n      <Seo />\n      <Banner\n        content=\"Welcome to Franklin. Starter theme for Gatsby.\"\n      />\n      <FeaturedItems>{BlogPostQuery.totalCount} Featured Posts</FeaturedItems>\n      {BlogPostQuery.edges.map(({ node }, index) => (\n        <BlogItem nodeObj={node} index={index} />\n      ))}\n    </>\n  )\n}\n\nexport default HomePage\n\nexport const query = graphql`\n  {\n    BlogPostQuery: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 3\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YY\")\n            path\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FULL_WIDTH\n                  placeholder: TRACED_SVG\n                  formats: [AUTO, WEBP]\n                )\n              }\n            }\n            featuredImageAlt\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}